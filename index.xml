<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sams Performance Training on Sams Performance Training</title>
    <link>/</link>
    <description>Recent content in Sams Performance Training on Sams Performance Training</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018 Sams Performance Training</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 -0400</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Individualized Athlete Monitoring in R, Part 1</title>
      <link>/post/r-individual-monitoring-part-1/</link>
      <pubDate>Thu, 16 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/r-individual-monitoring-part-1/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#getting-back-into-the-swing-of-things&#34;&gt;Getting Back into the Swing of Things&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#statistical-process-control-spc&#34;&gt;Statistical Process Control (SPC)&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#performing-spc-in-r&#34;&gt;Performing SPC in R&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#getting-fancy&#34;&gt;Getting Fancy&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wrapping-up&#34;&gt;Wrapping Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#code-recap&#34;&gt;Code Recap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;getting-back-into-the-swing-of-things&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Getting Back into the Swing of Things&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/3-Individual_Monitoring/bender.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;Well, it’s been a hot minute since my last post (whoops!). I’ve been busy with bobsledders and job hunting this summer, but I’ve finally found a bit of time to get back to the ole blog now that bobsled’s summer training is winding down and I’m preparing for an intercontinental move (keep an eye on Twitter for related news).&lt;/p&gt;
&lt;p&gt;A ton of great papers have come out this summer focused on various aspects of athlete monitoring. One that I particularly enjoyed was “Putting the ‘I’ Back in Team” by Patrick Ward, Aaron Coutts, Ricard Pruna, and Alan McCall &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#ref-Ward_2018&#34;&gt;6&lt;/a&gt;]&lt;/span&gt;. They didn’t discuss anything groundbreaking, but it was nice to see statistical process control get a bit more love (for additional commentary on SPC, see Sands et al. &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#ref-Sands_2017&#34;&gt;5&lt;/a&gt;]&lt;/span&gt;) while dancing around the idea of anomaly detection via modeling. The latter has been particularly interesting to me for the last year or so, but I haven’t gotten past the “fiddling stage” in R until the last month. We’ll get deeper into SPC today and will touch on anomaly detection in Part 2.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;statistical-process-control-spc&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Statistical Process Control (SPC)&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/3-Individual_Monitoring/quality-control.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;Like many of the other statistical techniques used in sports science, SPC has been borrowed from the business analytics world, specifically manufacturing quality control. The underlying theory of SPC is pretty straightforward–all “processes” possess a certain amount of variation or noise. Some of this variation is idiosyncratic (inherent to the individual process being studied), whereas additional unexplained variation may be introduced through alterations in the process. Processes experiencing normal variation are said to be “in control” or “stable” while a process experiencing random/intermittent unexplained variation outside its norm is considered “out of control.” Perfectly clear? Great!&lt;/p&gt;
&lt;p&gt;…In reality, that definition probably didn’t make a lot of sense. Let’s try again with a very practical example. The last few years, I’ve used weighted squat jumps (SJ) as a fatigue monitoring tool. My rationale for using weighted SJ came from my thesis and from a handful of papers that have shown SJ height from flight time may be more sensitive to fatigue state than countermovement jump (CMJ) height from flight time &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#ref-Gathercole_2015&#34;&gt;1&lt;/a&gt;–&lt;a href=&#34;#ref-Sams_2014&#34;&gt;4&lt;/a&gt;]&lt;/span&gt;. Each athlete will have their own “normal”–that is, a day-to-day range they will stay within when under “normal” levels of fatigue and when no training adaptations have occurred (strength changes, etc.). This range represents the athlete’s typical variation in their jump performance and will be inherent to that athlete. Some athletes will have a very tight inter-day variation in jump height (&amp;lt; 1 cm), whereas others may have greater inter-day fluctuations (2 - 4 cm). When the athlete’s jump height is within their normal range, we can say with relative certainty that the &lt;em&gt;process&lt;/em&gt; of their SJ height is “in control.” In the case of using SJ height as a proxy measure of fatigue state, we can assert that the athlete is not experiencing undue levels of fatigue…Well, maybe. Don’t rely on a single metric to solve all of life’s problems. If, however, the athlete’s jump height falls below an arbitrarily set threshold (typically 1 - 2 SD below their average), they can be flagged for deeper analysis and potential intervention as their SJ height is now “out of control.” This suggests they may be experiencing elevated levels of fatigue.&lt;/p&gt;
&lt;div id=&#34;performing-spc-in-r&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Performing SPC in R&lt;/h3&gt;
&lt;p&gt;It’s always easier to understand this stuff with visuals. If you’d like to follow along, the data can be found &lt;a href=&#34;/post/3-Individual_Monitoring/jump-data.csv&#34;&gt;here&lt;/a&gt;. Let’s see what we’re working with:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;jumpDate&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;athlete&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;jumpType&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;flightTime&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;session&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Benjamin Babatunde&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.60&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Benjamin Babatunde&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.61&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Joo Garand&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.62&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Joo Garand&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.62&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Steve Galligan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.57&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Steve Galligan&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.57&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Jungsoo Moua&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.58&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Jungsoo Moua&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.58&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Naadir el-Mahdavi&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.63&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Naadir el-Mahdavi&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;SJ&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.62&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;BL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-08-16-r-individual-monitoring_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;These are real flight time values measured on switch mats, although the athletes’ names have been randomized. The data come from 21 vertical jump testing sessions across a fall season and include 1 “baseline” testing session and 20 in-season testing sessions that were carried out ~ 4 hours before most of the season’s matches. Each athlete completed 2 - 3 trials at each testing session, and the two closest trials were stored in the monitoring database.&lt;/p&gt;
&lt;p&gt;First things first, we need to obtain session averages for each athlete. I know &lt;code&gt;dplyr&lt;/code&gt; tends to be the go-to for data manipulation, so I’ve included both &lt;code&gt;dplyr&lt;/code&gt; and &lt;code&gt;data.table&lt;/code&gt; (my personal favorite) versions of the code throughout the remainder of the post. One of these days, I’ll get around to discussing the usefulness of using &lt;code&gt;dplyr&lt;/code&gt; and &lt;code&gt;data.table&lt;/code&gt; together…one day.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Importing the data
jump.data &amp;lt;- read.csv(&amp;#39;3-Individual_Monitoring/jump-data.csv&amp;#39;)

# We need to convert the dates from factor to date type
jump.data$jumpDate &amp;lt;- as.Date(jump.data$jumpDate)

# dplyr syntax
dplyr.jump.means &amp;lt;- jump.data %&amp;gt;% group_by(jumpDate, athlete) %&amp;gt;%
  summarise(avg_ft = mean(flightTime))

# data.table syntax
jump.data &amp;lt;- data.table(jump.data)

dt.jump.means &amp;lt;- jump.data[, .(avg_ft = mean(flightTime)), by = .(jumpDate, athlete)]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In either case, we now have mean session values for each athlete:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;jumpDate&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;athlete&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;avg_ft&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Benjamin Babatunde&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.605&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Joo Garand&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.620&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Steve Galligan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.570&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Jungsoo Moua&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.580&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Naadir el-Mahdavi&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.625&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Brandon Troxel&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.540&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aqeel al-Hossain&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.640&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Darin Russell&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.575&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aiden Jaeger&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.535&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Tony Cha&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.635&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-08-16-r-individual-monitoring_files/figure-html/unnamed-chunk-3-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We need a few more pieces of information to create control charts for our analysis–namely, each athlete’s overall mean flight time and the standard deviation of their flight times:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# dplyr syntax
dplyr.jump.means &amp;lt;- dplyr.jump.means %&amp;gt;% group_by(athlete) %&amp;gt;% 
  mutate(ind_mean = round(mean(avg_ft), 3),
         ind_sd = round(sd(avg_ft), 3))

# data.table syntax
dt.jump.means[, &amp;#39;:=&amp;#39; (ind_mean = round(mean(avg_ft), 3), 
                      ind_sd = round(sd(avg_ft), 3)), by = athlete]

knitr::kable(dt.jump.means[1:10,])&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;jumpDate&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;athlete&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;avg_ft&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;ind_mean&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;ind_sd&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Benjamin Babatunde&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.605&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.613&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.014&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Joo Garand&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.618&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.013&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Steve Galligan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.570&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.587&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Jungsoo Moua&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.580&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.575&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Naadir el-Mahdavi&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.625&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.596&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Brandon Troxel&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.540&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.540&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.019&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aqeel al-Hossain&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.640&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.597&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Darin Russell&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.575&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.538&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.017&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aiden Jaeger&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.535&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.549&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.025&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Tony Cha&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.635&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.616&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.020&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Once we have the athletes’ means and standard deviations, we can calculate their upper and lower control limits. In this example, I’m using limits of mean ± 1.5 SD:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# dplyr syntax
dplyr.jump.means &amp;lt;- dplyr.jump.means %&amp;gt;% group_by(athlete) %&amp;gt;%
  mutate(upper_limit = round(ind_mean + 1.5 * ind_sd, 3),
         lower_limit = round(ind_mean - 1.5 * ind_sd, 3)) %&amp;gt;% ungroup()

# data.table syntax
dt.jump.means[, &amp;#39;:=&amp;#39; (upper_limit = round(ind_mean + 1.5 * ind_sd, 3),
                      lower_limit = round(ind_mean - 1.5 * ind_sd, 3)),
              by = athlete]

knitr::kable(dt.jump.means[1:10,])&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;jumpDate&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;athlete&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;avg_ft&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;ind_mean&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;ind_sd&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;upper_limit&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;lower_limit&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Benjamin Babatunde&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.605&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.613&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.014&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.634&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.592&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Joo Garand&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.620&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.618&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.013&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.638&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.598&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Steve Galligan&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.570&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.587&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.010&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.602&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.572&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Jungsoo Moua&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.580&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.575&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.010&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.590&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.560&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Naadir el-Mahdavi&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.625&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.596&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.020&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.626&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.566&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Brandon Troxel&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.540&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.540&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.019&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.568&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.512&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aqeel al-Hossain&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.640&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.597&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.622&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.572&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Darin Russell&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.575&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.538&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.017&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.564&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.513&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Aiden Jaeger&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.535&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.549&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.025&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.586&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.512&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;2015-08-15&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Tony Cha&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.635&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.616&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.020&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.646&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.586&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now we have everything we need to plot control charts for our athletes. To start, I’m only going to plot the data from a single athlete because things can get cluttered pretty quickly.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Plot a single athlete&amp;#39;s data
ggplot(dt.jump.means[athlete == &amp;#39;Steve Galligan&amp;#39;], aes(x = jumpDate, y = avg_ft)) + 
  geom_point() + geom_line() + 
  geom_hline(aes(yintercept = ind_mean)) + 
  geom_hline(aes(yintercept = upper_limit), linetype = &amp;#39;dotdash&amp;#39;) +
  geom_hline(aes(yintercept = lower_limit), linetype = &amp;#39;dotdash&amp;#39;) + theme_bw() +
  labs(title = &amp;#39;Jumps Over Time&amp;#39;, x = &amp;#39;Testing Date&amp;#39;, y = &amp;#39;Flight Time (s)&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-08-16-r-individual-monitoring_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Now we have a very basic control chart worked out. Obviously, we’re examining the data retrospectively for an athlete we managed &lt;em&gt;relatively&lt;/em&gt; well so a majority of his flight time values fall within his control limits (the drop you see at the end was after Friday-Sunday double overtime games where he played 110 minutes each game). Examining the plot brings up an important issue with SPC, though: process shifts. If you take a look at the first few testing sessions of the season, there is a noticeable increase in his performance leading into September. From knowing this athlete, I can tell you he came in unfit and having performed zero strength training that summer so his increased jump performance was to be expected. It’s safe to assume that we’ve captured his fitness changes in our monitoring data, and these fitness changes have created a process shift in his vertical jump performance. Not accounting for this shift will artificially inflate the control limits, which could cause us to miss otherwise important decreases in his monitoring data.&lt;/p&gt;
&lt;p&gt;So how can we deal with process shifts? Your chosen solution will ultimately boil down to how much free time you have, but I’ll wager most of you reading don’t have a lot. One of the easiest solutions is to use a rolling window approach to calculate your individual means and standard deviations. Like most things in sports science, there are no rules for rolling window size, but I would say whatever your window size is for your chronic rolling window (if you’re using A:C calculations) is a good place to start. For us, that was a 28-day window. So let’s reacalculate our limits and plot the data for the final 28 days of the season:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# dplyr syntax using &amp;quot;chaining&amp;quot;
dplyr.recent.jumps &amp;lt;- dplyr.jump.means %&amp;gt;% filter(jumpDate &amp;gt;= max(jumpDate) - 28) %&amp;gt;%
  group_by(athlete) %&amp;gt;% mutate(ind_mean = mean(avg_ft),
                               ind_sd = sd(avg_ft),
                               upper_limit = ind_mean + 1.5 * ind_sd,
                               lower_limit = ind_mean - 1.5 * ind_sd)

# data.table syntax using chaining; data.table functions a little differently
dt.recent.jumps &amp;lt;- dt.jump.means[jumpDate &amp;gt;= max(jumpDate) - 28]

dt.recent.jumps[, &amp;#39;:=&amp;#39; (ind_mean = mean(avg_ft),
                        ind_sd = sd(avg_ft)),
                by = athlete][, &amp;#39;:=&amp;#39; (upper_limit = ind_mean + 1.5 * ind_sd,
                                      lower_limit = ind_mean - 1.5 * ind_sd),
                              by = athlete]

ggplot(dt.recent.jumps[athlete == &amp;#39;Steve Galligan&amp;#39;], aes(x = jumpDate, y = avg_ft)) + 
  geom_point() + geom_line() + 
  geom_hline(aes(yintercept = ind_mean)) + 
  geom_hline(aes(yintercept = upper_limit), linetype = &amp;#39;dotdash&amp;#39;) +
  geom_hline(aes(yintercept = lower_limit), linetype = &amp;#39;dotdash&amp;#39;) + theme_bw() +
  labs(title = &amp;#39;Jumps Over Time&amp;#39;, x = &amp;#39;Testing Date&amp;#39;, y = &amp;#39;Flight Time (s)&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-08-16-r-individual-monitoring_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In both cases, the final testing session of the season fell below the athlete’s control limits, so both roads would have led to Rome. While this approach worked in the current case, you may have to adjust your window based on the frequency of your testing. For the year in question, we tested every ~ 4 days, but the next season was closer to every 10 days. Implementing a 28-day rolling window for both seasons would provide drastically different numbers of sessions for our calculations. In the case of a college sport, an alternative may be removal of the pre-season from the calculations. Ultimately, though, this will be an individualized decision based on your specific testing and monitoring setup.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;getting-fancy&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Getting Fancy&lt;/h3&gt;
&lt;p&gt;There are no hard and fast rules for what threshold constitutes an out of control process. For instance, a threshold of 1 SD (.16 probability of occurring by random chance) may be too reactive to otherwise harmless fluctuations in performance while a threshold of 2 SD (.025 probability of occurring by random chance) may be too strict &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#ref-Sands_2017&#34;&gt;5&lt;/a&gt;,&lt;a href=&#34;#ref-Ward_2018&#34;&gt;6&lt;/a&gt;]&lt;/span&gt;. Personally, I prefer a threshold of 1.5 SD (.065 probability of occurring by random chance), but other methods such as setting an “alert” threshold and a “warning” threshold (e.g. 1 SD = alert and 1.5 or 2 SD = warning) or implementing more sophisticated rules (see &lt;a href=&#34;https://en.wikipedia.org/wiki/Control_chart#Rules_for_detecting_signals&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt; for a discussion on different rule sets) are also possible &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#ref-Ward_2018&#34;&gt;6&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For example, let’s apply alert (1 SD) and warning (1.5 SD) thresholds to our data from the first example.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# dplyr syntax
dplyr.jump.means &amp;lt;- dplyr.jump.means %&amp;gt;% group_by(athlete) %&amp;gt;%
  rename(upper_limit_1.5SD = upper_limit, lower_limit_1.5SD = lower_limit) %&amp;gt;%
  mutate(upper_limit_1SD = round(ind_mean + ind_sd, 3),
         lower_limit_1SD = round(ind_mean - ind_sd, 3)) %&amp;gt;% ungroup()

# data.table syntax
setnames(dt.jump.means,
         old = c(&amp;#39;upper_limit&amp;#39;, &amp;#39;lower_limit&amp;#39;),
         new = c(&amp;#39;upper_limit_1.5SD&amp;#39;, &amp;#39;lower_limit_1.5SD&amp;#39;))

dt.jump.means[, &amp;#39;:=&amp;#39; (upper_limit_1SD = round(ind_mean + ind_sd, 3),
                      lower_limit_1SD = round(ind_mean - ind_sd, 3)
                      ), by = athlete]

ggplot(dt.jump.means[athlete == &amp;#39;Steve Galligan&amp;#39;], aes(x = jumpDate, y = avg_ft)) +
  geom_point() +
  geom_line() +
  geom_hline(aes(yintercept = ind_mean)) +
  geom_hline(aes(yintercept = lower_limit_1.5SD)) +
  geom_hline(aes(yintercept = upper_limit_1.5SD)) +
  geom_hline(aes(yintercept = lower_limit_1SD), linetype = &amp;#39;dashed&amp;#39;) +
  geom_hline(aes(yintercept = upper_limit_1SD), linetype = &amp;#39;dashed&amp;#39;) +
  theme_bw() +
  labs(title = &amp;#39;Jumps Over Time&amp;#39;, x = &amp;#39;Testing Date&amp;#39;, y = &amp;#39;Flight Time (s)&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-08-16-r-individual-monitoring_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It’s also possible to color code the plots based on whether they violate your chosen thresholds or more advanced rule sets. The code gets very messy (I originally included example code but removed it because it was difficult to follow), so if you want to use color coding or more advanced rule sets, I would seriously recommend exploring one of the specially-built SPC packages available on CRAN. &lt;code&gt;qcc&lt;/code&gt;, for instance, can create both individual control charts (“I” charts) and EWMA-based charts. Selection on chart type will depend on the amount of data you have and the window size you’ve chosen.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;wrapping-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;If you really want to go down the SPC rabbit hole, there are R packages dedicated to SPC analysis (&lt;code&gt;spc&lt;/code&gt;, &lt;code&gt;qicharts&lt;/code&gt;, &lt;code&gt;qcc&lt;/code&gt;). I’ve played around with &lt;code&gt;qcc&lt;/code&gt; a bit to create both “I” and EWMA control charts, but I don’t have enough experience with the package to provide any sort of guidance.&lt;/p&gt;
&lt;p&gt;I had originally planned on covering anomaly detection in this post as well, but I’m pretty sure all our brains would be mush by the end. Look for Part 2 to drop in the next few days! In the meantime, feel free to drop me a line on &lt;a href=&#34;https://twitter.com/DrMattSams&#34; target=&#34;_blank&#34;&gt;twitter&lt;/a&gt; or email me at &lt;a href=&#34;mailto:samsperformancetraining@gmail.com&#34;&gt;samsperformancetraining@gmail.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;code-recap&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Code Recap&lt;/h2&gt;
&lt;p&gt;To recap the code used in Part 1:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Required packages
library(data.table)
library(ggplot2)
library(knitr)
library(dplyr)

# Importing the data
jump.data &amp;lt;- read.csv(&amp;#39;3-Individual_Monitoring/jump-data.csv&amp;#39;)

# We need to convert the dates from factor to date type
jump.data$jumpDate &amp;lt;- as.Date(jump.data$jumpDate)

# --- Session Averages --- #

# dplyr syntax
dplyr.jump.means &amp;lt;- jump.data %&amp;gt;% group_by(jumpDate, athlete) %&amp;gt;%
  summarise(avg_ft = mean(flightTime))

# data.table syntax
jump.data &amp;lt;- data.table(jump.data)

dt.jump.means &amp;lt;- jump.data[, .(avg_ft = mean(flightTime)), by = .(jumpDate, athlete)]

# --- Individual Averages and SD --- #
# dplyr syntax
dplyr.jump.means &amp;lt;- dplyr.jump.means %&amp;gt;% group_by(athlete) %&amp;gt;% 
  mutate(ind_mean = round(mean(avg_ft), 3),
         ind_sd = round(sd(avg_ft), 3))

# data.table syntax
dt.jump.means[, &amp;#39;:=&amp;#39; (ind_mean = round(mean(avg_ft), 3), 
                      ind_sd = round(sd(avg_ft), 3)), by = athlete]

# --- Plot 1 --- #
# Plot a single athlete&amp;#39;s data
ggplot(dt.jump.means[athlete == &amp;#39;Steve Galligan&amp;#39;], aes(x = jumpDate, y = avg_ft)) + 
  geom_point() + geom_line() + 
  geom_hline(aes(yintercept = ind_mean)) + 
  geom_hline(aes(yintercept = upper_limit), linetype = &amp;#39;dotdash&amp;#39;) +
  geom_hline(aes(yintercept = lower_limit), linetype = &amp;#39;dotdash&amp;#39;) + theme_bw() +
  labs(title = &amp;#39;Jumps Over Time&amp;#39;, x = &amp;#39;Testing Date&amp;#39;, y = &amp;#39;Flight Time (s)&amp;#39;)

# --- Rolling Window and Plot --- #
# dplyr syntax using &amp;quot;chaining&amp;quot;
dplyr.recent.jumps &amp;lt;- dplyr.jump.means %&amp;gt;% filter(jumpDate &amp;gt;= max(jumpDate) - 28) %&amp;gt;%
  group_by(athlete) %&amp;gt;% mutate(ind_mean = mean(avg_ft),
                               ind_sd = sd(avg_ft),
                               upper_limit = ind_mean + 1.5 * ind_sd,
                               lower_limit = ind_mean - 1.5 * ind_sd)

# data.table syntax using chaining; data.table functions a little differently
dt.recent.jumps &amp;lt;- dt.jump.means[jumpDate &amp;gt;= max(jumpDate) - 28]

dt.recent.jumps[, &amp;#39;:=&amp;#39; (ind_mean = mean(avg_ft),
                        ind_sd = sd(avg_ft)),
                by = athlete][, &amp;#39;:=&amp;#39; (upper_limit = ind_mean + 1.5 * ind_sd,
                                      lower_limit = ind_mean - 1.5 * ind_sd),
                              by = athlete]

ggplot(dt.recent.jumps[athlete == &amp;#39;Steve Galligan&amp;#39;], aes(x = jumpDate, y = avg_ft)) + 
  geom_point() + geom_line() + 
  geom_hline(aes(yintercept = ind_mean)) + 
  geom_hline(aes(yintercept = upper_limit), linetype = &amp;#39;dotdash&amp;#39;) +
  geom_hline(aes(yintercept = lower_limit), linetype = &amp;#39;dotdash&amp;#39;) + theme_bw() +
  labs(title = &amp;#39;Jumps Over Time&amp;#39;, x = &amp;#39;Testing Date&amp;#39;, y = &amp;#39;Flight Time (s)&amp;#39;)

# --- Having both alert and warning thresholds --- #
# dplyr syntax
dplyr.jump.means &amp;lt;- dplyr.jump.means %&amp;gt;% group_by(athlete) %&amp;gt;%
  rename(upper_limit_1.5SD = upper_limit, lower_limit_1.5SD = lower_limit) %&amp;gt;%
  mutate(upper_limit_1SD = round(ind_mean + ind_sd, 3),
         lower_limit_1SD = round(ind_mean - ind_sd, 3)) %&amp;gt;% ungroup()

# data.table syntax
setnames(dt.jump.means,
         old = c(&amp;#39;upper_limit&amp;#39;, &amp;#39;lower_limit&amp;#39;),
         new = c(&amp;#39;upper_limit_1.5SD&amp;#39;, &amp;#39;lower_limit_1.5SD&amp;#39;))

dt.jump.means[, &amp;#39;:=&amp;#39; (upper_limit_1SD = round(ind_mean + ind_sd, 3),
                      lower_limit_1SD = round(ind_mean - ind_sd, 3)
                      ), by = athlete]

ggplot(dt.jump.means[athlete == &amp;#39;Steve Galligan&amp;#39;], aes(x = jumpDate, y = avg_ft)) +
  geom_point() +
  geom_line() +
  geom_hline(aes(yintercept = ind_mean)) +
  geom_hline(aes(yintercept = lower_limit_1.5SD)) +
  geom_hline(aes(yintercept = upper_limit_1.5SD)) +
  geom_hline(aes(yintercept = lower_limit_1SD), linetype = &amp;#39;dashed&amp;#39;) +
  geom_hline(aes(yintercept = upper_limit_1SD), linetype = &amp;#39;dashed&amp;#39;) +
  theme_bw() +
  labs(title = &amp;#39;Jumps Over Time&amp;#39;, x = &amp;#39;Testing Date&amp;#39;, y = &amp;#39;Flight Time (s)&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level2 unnumbered&#34;&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-Gathercole_2015&#34;&gt;
&lt;p&gt;&lt;sup&gt;1&lt;/sup&gt; &lt;em&gt;Gathercole RJ, Sporer BC, Stellingwerff T, Sleivert GG. &lt;/em&gt;Comparison of the capacity of different jump and sprint field tests to detect neuromuscular fatigue. Journal of Strength and Conditioning Research 2015; 29: 2522–2531 Available from: &lt;a href=&#34;https://doi.org/10.1519/jsc.0000000000000912&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1519/jsc.0000000000000912&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Hoffman_2002&#34;&gt;
&lt;p&gt;&lt;sup&gt;2&lt;/sup&gt; &lt;em&gt;Hoffman JR, Haresh CM, Newton RU, Rubin MR, French DN, Volek JS, Sutherland J, Robertson M, Gomez AL, Ratamess NA, Kang J, Kraemer WJ. &lt;/em&gt;Performance, biochemical, and endocrine changes during a competitive football game. Medicine and Science in Sports and Exercise 2002; 34: 1845–1853 Available from: &lt;a href=&#34;https://doi.org/10.1249/01.MSS.0000035373.26840.F8&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1249/01.MSS.0000035373.26840.F8&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-hortobgyi1991voluntary&#34;&gt;
&lt;p&gt;&lt;sup&gt;3&lt;/sup&gt; &lt;em&gt;Hortob’agyi T, Lambert NJ, Kroll WP. &lt;/em&gt;Voluntary and reflex responses to fatigue with stretch-shortening exercise. Canadian journal of sport sciences = Journal canadien des sciences du sport 1991; 16: 142–150&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Sams_2014&#34;&gt;
&lt;p&gt;&lt;sup&gt;4&lt;/sup&gt; &lt;em&gt;Sams ML. &lt;/em&gt;Comparison of static and countermovement jump variables in relation to estimated training load and subjective measures of fatigue. 2014;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Sands_2017&#34;&gt;
&lt;p&gt;&lt;sup&gt;5&lt;/sup&gt; &lt;em&gt;Sands WA, Kavanaugh AA, Murray SR, McNeal JR, Jemni M. &lt;/em&gt;Modern techniques and technologies applied to training and performance monitoring. International Journal of Sports Physiology and Performance 2017; 12: S2–63–S2–72 Available from: &lt;a href=&#34;https://doi.org/10.1123/ijspp.2016-0405&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1123/ijspp.2016-0405&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Ward_2018&#34;&gt;
&lt;p&gt;&lt;sup&gt;6&lt;/sup&gt; &lt;em&gt;Ward P, Coutts AJ, Pruna R, McCall A. &lt;/em&gt;Putting the “i” back in team. International Journal of Sports Physiology and Performance 2018; 1–14 Available from: &lt;a href=&#34;https://doi.org/10.1123/ijspp.2018-0154&#34; class=&#34;uri&#34;&gt;https://doi.org/10.1123/ijspp.2018-0154&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>S3 2018 Recap</title>
      <link>/post/s3-2018-recap/</link>
      <pubDate>Sun, 24 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/s3-2018-recap/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#an-overview&#34;&gt;An Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#recap&#34;&gt;Recap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#some-personal-thoughts&#34;&gt;Some Personal Thoughts&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#on-evolution-no-not-that-one&#34;&gt;On Evolution (No, Not That One)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#on-the-sports-science-see-saw&#34;&gt;On The Sports Science See-Saw&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#on-machine-learning&#34;&gt;On Machine Learning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#staying-out-of-the-weeds&#34;&gt;Staying out of the Weeds&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;an-overview&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;An Overview&lt;/h2&gt;
&lt;p&gt;The first S3 &lt;a href=&#34;https://twitter.com/S3Conference&#34; target=&#34;_blank&#34;&gt;(Sports Science Summit)&lt;/a&gt; is officially in the books. Organized (at least from what I can tell) and moderated by Gary McCoy, the conference was meant to provide insights from some of the most progressive sports science programs in the US. I have to be honest when I say I was skeptical when I first heard about the conference last week, because I’ve been burned more than once by larger national conferences that promised a big game yet failed to deliver. Let me just say, S3 delivered! Each of the talks and panel discussions was extremely interesting and gave me a little more hope for sports science in the US (I’ll save my rant for another day).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;recap&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Recap&lt;/h2&gt;
&lt;p&gt;Gary McCoy started things off with some opening remarks and his beliefs on the current state of sports science in the US. It didn’t take long for me to decide we’re kindred spirits, because one of the first points he made was that sports science isn’t a “thing”–it’s a process. Too often, coaching staffs hire a “sports scientist” with the hope that they’ll solve all the team’s problems overnight. When things haven’t changed appreciably in the first few months (or even the first year), said sports scientist should probably start updating their resume. Further, cue the following quote from the coach/admin: “Yeah, we tried that sports science thing, but it didn’t really work for us.” These all-too-common scenarios tend to pop up for two reasons I think: 1) Some individuals and companies tend to oversell the benefits of a sports science program for their own short-term gain while conflating the presence of technology with sports science and 2) there is a disconnect between what we do and what administrators think we do.&lt;/p&gt;
&lt;p&gt;To the first point, I’ve spoken to several coaches who have purchased X hardware and software because a company rep promised them the world (eliminate injuries, win every game, assess player readiness with &lt;strong&gt;this one weird metric&lt;/strong&gt;, that sorta stuff). Tens of thousands of dollars (and one or two added employees) later, that shiny hardware sits on the shelf collecting dust and the password to the software platform has long been forgotten. The coach is left with a bad taste in their mouth about “that sports science thing,” and progress in the field is set back.&lt;/p&gt;
&lt;p&gt;(I spent way too long looking for a “What I think I do” meme. Imagine there’s one here for this next bit.)&lt;/p&gt;
&lt;p&gt;The above situation tends to play out over and over again because there’s a disconnect between what sports science actually is and what those outside the field think it is. At its core, sports science is about optimizing performance, maintaining or improving athlete wellbeing, and minimizing injury risk. That’s it. Sports science isn’t running logistic regression models, making pretty graphics to impress stakeholders, and telling the coach and S&amp;amp;C staff “no” or “do less.” Instead, sports science is looking at an athlete or a team and attempting to answer questions. E.g.:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“Why do we have so many injuries at this time of year?”&lt;/li&gt;
&lt;li&gt;“How can we increase our player availability?”&lt;/li&gt;
&lt;li&gt;“How fit do we need to be?”&lt;/li&gt;
&lt;li&gt;“Can we train through this opponent?”&lt;/li&gt;
&lt;li&gt;“How can we make practice more efficient?”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;…With each question ultimately referring back to those goals I mentioned before. We might use a healthy dose of statistics and data visualization techniques along the way to answering said questions–and we might even have to have tough conversations with a coach from time to time–but we use data and the tools available to us as a means to an end, not ends in themselves. And unfortunately, the process of identifying a question, collecting and analyzing data, implementing a plan, and re-assessing takes time. I spent five years with ETSU men’s soccer, and while some questions were answered relatively quickly (“How can we improve player availability during conference play?”), questions like “How do we reduce the likelihood of an ACL injury after spring break?” were tougher nuts to crack (4 years of poring over data in fact). In the current age of smartphones, text messages, and immediate gratification, explaining to a coach or athletic director that it might take a while to effect positive change isn’t very well received. Yet it’s imperative we help administrators understand sports science is a process that takes time to bring about change, not some nebulous thing that works or doesn’t work.&lt;/p&gt;
&lt;p&gt;That thought ties in nicely with a common theme shared by many of the speakers (&lt;a href=&#34;https://twitter.com/StrengthCoach21&#34; target=&#34;_blank&#34;&gt;Gary McCoy&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/HulsShaun&#34; target=&#34;_blank&#34;&gt;Shaun Huls&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/SteveTashjian&#34; target=&#34;_blank&#34;&gt;Steve Tashjian&lt;/a&gt;, &lt;a href=&#34;https://twitter.com/Ben_J_Peterson&#34; target=&#34;_blank&#34;&gt;Ben Peterson&lt;/a&gt;, and the &lt;a href=&#34;https://twitter.com/DaveTenney/status/1008743782311972869&#34; target=&#34;_blank&#34;&gt;Orlando Magic high performance staff&lt;/a&gt;): communication reigns supreme in the high performance world. To have a successful high performance team, &lt;em&gt;everyone&lt;/em&gt; needs to be on the same page. That includes the coaches, S&amp;amp;C, sports medicine, sports science, sports nutrition, you name it. Further, we need to lean on and collaborate with each other instead of selfishly staying inside our little box and never reaching across the aisle. Obviously, we shouldn’t overstep into another professional’s domain (I’m not going to tell my head or assistant coach how to design a possession drill), but we should work synergistically with each member of the high performance team to provide the best service possible to our athletes (I would suggest drill dimensions, team sizes, drill lengths, etc. to the coaches to help us hit our desired internal and external load targets). I’ll again refer you back to the three goals of sports science I mentioned above.&lt;/p&gt;
&lt;p&gt;Ben Peterson had an especially interesting take on communication in the high performance world. Most of us are trained in hard skills during our masters and PhD programs, but few programs emphasize the soft skill side of things (etiquette, listening, getting along, smalltalk, that sort of stuff). Yet the soft skills are vital in overcoming that administrative disconnect I mentioned before. You naturally pick up some soft skills in the course of working with athletes and coaches from a variety of backgrounds, but Ben suggested that making a conscious effort to improve your soft skills can go a long way in improving coach and athlete buy-in and can ultimately make life easier for all parties involved. From personal experience, dealing with athletes from less rigid cultural backgrounds became a whole lot easier once I took a more empathetic and positive approach.&lt;/p&gt;
&lt;p&gt;The afternoon’s talks were my personal favorites. Full disclosure (if you couldn’t already guess), I’m a technology and monitoring nerd. And boy, did John Meyer and Marcus Elliot deliver in spades. John is the Associate AD of Sports Science and Performance at USC (the Californian variety), while Marcus is the founder and head of P3 (Peak Performance Project). Both have spent their respective careers collecting and analyzing vast amounts of monitoring data as a means to improve the training and rehabilitative processes. They shared some pretty interesting work on concussion management, return to play, and predictive analytics that had me turning to the guy next to me and saying, “Well, guess I’m moving to LA to work for one of these guys.” I’m not sure if I was kidding. Suffice to say, I plan on keeping an eye on the work they’re doing and have some new ideas I want to implement in my own athlete training and monitoring.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;some-personal-thoughts&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Some Personal Thoughts&lt;/h2&gt;
&lt;p&gt;While I really enjoyed the conference, I do have some disagreements with a few of the speakers on a philosophical level.&lt;/p&gt;
&lt;div id=&#34;on-evolution-no-not-that-one&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;On Evolution (No, Not That One)&lt;/h3&gt;
&lt;p&gt;Several speakers mentioned the idea of constant evolution of your sports science program. While I agree that a program that isn’t pushing forward and seeking to continually improve itself year-after-year is effectively dead, evolution for evolution’s sake (or to be different or “brave” as one speaker put it) is just as damaging as stagnation. Yes, we should constantly look to improve our training program, monitoring program, coaching feedback, etc., but change should occur in a logical, progressive way that addresses one (or more) of our three goals (optimized performance, maintained or improved wellbeing, reduced injury risk). It’s OK that you’ve used the same vertical jump protocol to assess your athletes’ explosive capabilities for the last 8 years &lt;strong&gt;AS LONG AS&lt;/strong&gt; the data you obtain from the test are leveraged in some way. You might even improve your testing protocol by adding new technology that provides you deeper insights (Vertec -&amp;gt; switch mats -&amp;gt; force plates). And hey, it’s perfectly fine to test new things with your athletes as long as you can justify their inclusion and they won’t put an undue burden on the athletes. As an example, my first year with ETSU men’s soccer didn’t involve any athlete monitoring past sRPE and pre- and post-season lab testing. My second year, we used force plates to monitor the athletes’ vertical jumps once a week. We found that weighted squat jump height was strongly related to the athletes’ accumulated training load, so the next three years involved performing weighted squat jumps on match day to assess the athletes’ fatigue states. We used that data both to make training modifications in the moment and to adjust our training program in subsequent seasons. My point is that while the test was modified over time (force plates -&amp;gt; a switch mat, once weekly -&amp;gt; every pre-game), the fundamental core of using the data to monitor the athletes’ fatigue state remained the same.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;on-the-sports-science-see-saw&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;On The Sports Science See-Saw&lt;/h3&gt;
&lt;p&gt;This is tangentially related to the previous point. One thing that continues to frustrate me about the field is that we tend to wildly swing from one viewpoint to another. In ACL rehabilitative circles, for instance, asymmetry was the only thing that mattered for years. Then, someone proclaimed asymmetry was dead and that force production was all that mattered. Naturally, everyone suddenly parroted that as gospel. In reality, &lt;em&gt;both&lt;/em&gt; are important. Yes, the involved limb needs to be able to tolerate the forces encountered in match play, but if the non-involved limb is experiencing disproportionately greater forces either from “picking up the slack” or a learned compensation pattern, there’s a good chance of a follow-up injury. In the words of my all-time favorite commercial,&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/2-S3/porque.jpg&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;The same goes for nutrition and training theory. Some ideas were shared during the conference that came across as “60 years of performance research is wrong”…based on my observations…with a single group of athletes…over a two year span. All I’m saying is pump the brakes a bit, let the research develop, and take a more nuanced approach to what you’re publicizing. Of course, if what you’re doing is working for you, great, keep it up. But be careful about making broad generalizations to other populations before the data are in. Likewise, as a practitioner listening to these types of presentations, critically evaluate what you’re hearing and don’t be quick to chase every new fad just because it worked with one group of athletes.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;on-machine-learning&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;On Machine Learning&lt;/h3&gt;
&lt;p&gt;Interestingly, most of the speakers didn’t feel machine learning would have a major impact on the field in the near future. Maybe I’m stepping on my previous point a bit here, but I have a feeling machine learning will have an impact sooner than we think. Don’t get me wrong, I don’t think machine learning is going to solve all of our problems, but I do believe we’ll be able to answer some narrowly-defined questions as technology continues to develop and as the data we collect on athletes continues to increase. For instance, several papers have come out over the last three years that have used supervised machine learning to predict sRPE values from external workload measures (distance traveled, minutes played, sprints performed, etc.).&lt;/p&gt;
&lt;p&gt;An interesting application that I’ve been toying around with is the idea of “anomaly detection.” If we predict a certain sRPE value for an athlete, yet their true response is substantially greater than the prediction (and the error, of course), we might flag that athlete for a deeper dive into their data. If their pre-training mood state and HRV are displaying negative trends, we might provide them some additional rest. Likewise, if everything looks good from a pre-training standpoint, maybe something happened in training that they’re trying to conceal (be it injury, a bad practice, getting yelled at by coach, whatever).&lt;/p&gt;
&lt;p&gt;Another application of machine learning I see becoming popular is dimension reduction and identification of individualized metrics for each athlete. We can already perform dimension reduction to some degree with correlation analyses, PCA, and that sort of stuff, but machine learning may be able to help us better understand what external workload variables drive a specific athlete’s internal response. See &lt;a href=&#34;http://dx.doi.org/10.1123/ijspp.2015-0791&#34; target=&#34;_blank&#34;&gt;Bartlett et al.&lt;/a&gt; as an example of what I’m talking about.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;staying-out-of-the-weeds&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Staying out of the Weeds&lt;/h3&gt;
&lt;p&gt;Most importantly, though, I think it’s a good idea to echo what I said at the end of my last blog post: master the big before worrying about the small. The college athletes I’ve worked with for the last six years are very different compared to the Olympic athletes I’ve had the privilege to work with. The Olympic athletes make life easy (…well, most of the time): they sleep 9 - 10 hours a night, they take a 20-minute mid-day nap, they eat exactly what they need to eat when they need to eat it, and they’re extremely neurotic about their training. For them, extremely in-depth analysis of their data, experimentation with new training modalities, supervised machine learning to individualize what we’re monitoring, and all that good stuff are worthwhile endeavors. For my collegiate athletes…not so much. They don’t sleep, they take four hour naps because they didn’t sleep, they don’t eat, their time management skills are shit, and most of them are not invested in the training process. For those athletes, I’m wasting my time by digging super deep into their data. Instead of doing a deep dive to understand why they didn’t perform well in the last match, all I need to do is ask a teammate to find out they were up until 3 AM playing cards in the hotel lobby (unfortunately, a true story…we got spanked that match).&lt;/p&gt;
&lt;p&gt;So before you implement 15 different tools to monitor your athletes, start by reading the room. Understand the team and the team culture. If you’re dealing with immature athletes who aren’t that invested in the process, start small and use a few quick, non-invasive methods of assessment. Focus on the big areas (are they sleeping? eating?) and go from there. As you develop a better culture and get the athletes to buy into what you’re doing, you can begin to implement further monitoring techniques and maybe even get into some advanced methods of assessment.&lt;/p&gt;
&lt;p&gt;Anyway, that’s enough ranting for one blog post. I’d love to get your thoughts on what I discussed in this post, so feel free to reach out on Twitter &lt;a href=&#34;https://twitter.com/DrMattSams&#34; target=&#34;_blank&#34;&gt;(@DrMattSams)&lt;/a&gt; or shoot me an email: &lt;a href=&#34;mailto:samsperformancetraining@gmail.com&#34;&gt;samsperformancetraining@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Leveraging R to Calculate Acute:Chronic Workload Ratios</title>
      <link>/post/r-acwr-intro/</link>
      <pubDate>Sat, 09 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/r-acwr-intro/</guid>
      <description>&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#acutechronic-workload-ratios&#34;&gt;Acute:Chronic Workload Ratios?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#an-extremely-hot-topic&#34;&gt;An Extremely Hot Topic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#calculating-acwr-in-r&#34;&gt;Calculating ACWR in R&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#the-data&#34;&gt;The Data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#more-than-one-way-to-skin-a-cat&#34;&gt;More Than One Way to Skin a Cat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#coupled-vs.uncoupled&#34;&gt;Coupled vs. Uncoupled&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wrapping-up&#34;&gt;Wrapping Up&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#code-recap&#34;&gt;Code Recap&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;div id=&#34;acutechronic-workload-ratios&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Acute:Chronic Workload Ratios?&lt;/h2&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/1-ACWR/Confused-Gandalf.jpg&#34; style=&#34;width:50.0%&#34; style=&#34;height:50.0%&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;If you’ve been keeping up with the athlete workload monitoring world, you’ve probably heard of the concept of acute:chronic workload ratios (ACWR). In case you haven’t, the concept is relatively simple: how does the recently accumulated training load for an athlete (typically the last 3 - 7 days) compare to their chronic accumulation of training load (previous 3 - 6 weeks of training)? We can create a rolling average of the athlete’s acute and chronic workload values and then divide the acute value by the chronic value to calculate an ACWR. These workloads can come from both external (balls pitched, distance travelled, etc.) and internal (session RPE, heart rate TRIMP, etc.) measures of training load &lt;span class=&#34;citation&#34;&gt;(Ehrmann et al. &lt;a href=&#34;#ref-Ehrmann_2016&#34;&gt;2016&lt;/a&gt;, &lt;span class=&#34;citation&#34;&gt;Hulin et al. (&lt;a href=&#34;#ref-Hulin_2013&#34;&gt;2013&lt;/a&gt;)&lt;/span&gt;, &lt;span class=&#34;citation&#34;&gt;Hulin et al. (&lt;a href=&#34;#ref-Hulin_2015&#34;&gt;2015&lt;/a&gt;)&lt;/span&gt;)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;ACWR values provide a very intuitive snapshot of the training stress being experienced by the athlete and can be used to describe the “preparedness” of the athlete–that is, the relationship between their “fitness” and accumulated fatigue (see &lt;span class=&#34;citation&#34;&gt;(DeWeese et al. &lt;a href=&#34;#ref-DeWeese_2015&#34;&gt;2015&lt;/a&gt;)&lt;/span&gt;). Normal training produces both adaptations in the athlete’s fitness qualities and accumulated fatigue. Unfortunately, fatigue tends to mask complete expression of fitness qualities, so we want to avoid states of high fatigue when the athletes need to produce. Similarly, high levels of fatigue increase injury risk (although recent research &lt;span class=&#34;citation&#34;&gt;(Malone et al. &lt;a href=&#34;#ref-Malone_2018&#34;&gt;2018&lt;/a&gt;)&lt;/span&gt; has highlighted that the relationship is a bit more complicated than that), so we need to be cognizant of our athletes’ fatigue states during the planning and programming process.&lt;/p&gt;
&lt;p&gt;Like I said, we can use an athlete’s ACWR value to approximate their preparedness, with their acute workload representing “fatigue” and their chronic workload representing “fitness.” An ACWR ~ 1 represents training at a “normal” level, whereas values &amp;gt; 1 and &amp;lt; 1 represent supranormal and below-normal training, respectively. It isn’t necessarily wrong for the athlete’s ACWR value to move into either range; things only become problematic when the athlete is over-fatigued (extremely high ACWR or extended periods &amp;gt; 1) or under-prepared for the rigors of competition (extended periods of detraining / ACWR values &amp;lt; 1). Typically, the “sweet spot” for ACWR is somewhere between 0.8 to 1.5 (the red lines in the plots below). Feel free to check out &lt;span class=&#34;citation&#34;&gt;(Gabbett &lt;a href=&#34;#ref-Gabbett_2016&#34;&gt;2016&lt;/a&gt;)&lt;/span&gt; for a much deeper conversation on this topic.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/1-ACWR/tl-snip.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;Plotting an athlete’s ACWR alongside their daily and weekly training loads can give us an at-a-glance idea of whether our training loads have been appropriate. In the moment, we can use this data along with other monitoring data (e.g. jumps, questionnaires) to modify an athlete’s training. Retrospectively, we can leverage ACWRs and other monitoring data to understand what went wrong (no program is ever perfect) and how we can improve our training program in subsequent seasons. For instance, in the image above it should be pretty clear this athlete’s load profile is the opposite of what we want–a dense pre-season gives way to drastically reduced training loads during non-conference play that result in de-training. As he enters conference play, several double headers and a dense practice schedule (along with some punishment sessions for poor performance…and appearing tired 🤔) lead to a spike in his ACWR followed by an extended period &amp;gt; 1. His load is reduced in an attempt to manage his fatigue from the punishment…week, but he’s hit with another large spike in training (another punishment session) and a heavy week of training leading into the conference tournament. The team lost in the first round.&lt;/p&gt;
&lt;p&gt;It probably wouldn’t surprise you to know that this athlete’s jumps fell during pre-season, rose during non-conference play, then &lt;em&gt;plummeted&lt;/em&gt; during conference play and prior to the conference tournament. His mood questionnaire followed a similar pattern. I wasn’t working with this team at the time, so the best I can do is provide feedback during the planning phase for the next season. More on what that feedback might look like in another blog post. Today, we’re going to stay focused on ACWRs.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;an-extremely-hot-topic&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;An Extremely Hot Topic&lt;/h2&gt;
&lt;p&gt;While the use of ACWR values in athlete monitoring has become very popular in recent years, some recent papers have highlighted the shortcomings of the original ACWR calculation. First, fitness/fatigue degradation aren’t linear–they instead decline in a nonlinear fashion, with fatigue decaying at a faster rate than fitness &lt;span class=&#34;citation&#34;&gt;(DeWeese et al. &lt;a href=&#34;#ref-DeWeese_2015&#34;&gt;2015&lt;/a&gt;, &lt;span class=&#34;citation&#34;&gt;Murray et al. (&lt;a href=&#34;#ref-Murray_2016&#34;&gt;2016&lt;/a&gt;)&lt;/span&gt;)&lt;/span&gt;. Further, the original ACWR calculation assigned the same relative weight to all training load values in both the acute and chronic rolling windows (that is, the load experienced yesterday carries the same weight as a training session from four weeks ago), when it stands to reason that more recently accumulated training will have a greater impact on an athlete’s fitness and fatigue. Enter exponentially-weighted moving averages (EWMA), where a decay function is applied to give greater weight to recently-completed training. At least one paper &lt;span class=&#34;citation&#34;&gt;(Murray et al. &lt;a href=&#34;#ref-Murray_2016&#34;&gt;2016&lt;/a&gt;)&lt;/span&gt; has shown greater sensitivity for EWMA to detect elevated injury risk when compared to the traditional moving average approach.&lt;/p&gt;
&lt;p&gt;A second hot topic as of late is “mathematical coupling” of the acute and chronic workload values. In case you’re scratching your head like I was the first time I saw the term “mathematical coupling” (I haven’t had a math class in 11 years…and we won’t get started on my quantitative reasoning score on the GRE), &lt;a href=&#34;https://en.wikipedia.org/wiki/Coupling_(probability)&#34; target=&#34;_blank&#34;&gt;Wikipedia&lt;/a&gt; has a pretty good explanation of the concept. Basically, by including the acute workload window (the previous 3 - 7 days) in the chronic workload window (the last 21 - 28 days), we create a spurious correlation between the two values that mis-represents the athlete’s “true” ACWR &lt;span class=&#34;citation&#34;&gt;(Lolli et al. &lt;a href=&#34;#ref-Lolli_2017&#34;&gt;2017&lt;/a&gt;)&lt;/span&gt;. For ACWR &amp;lt; 1, coupled ACWR values are greater than their uncoupled counterparts. The ratios are the same at a value of 1, but uncoupled values become greater than coupled values when discussing ACWR &amp;gt; 1. Windt and Gabbett &lt;span class=&#34;citation&#34;&gt;(&lt;a href=&#34;#ref-Windt_2018&#34;&gt;2018&lt;/a&gt;)&lt;/span&gt; argue that while coupling or uncoupling the acute and chronic windows will lead to different interpretations of the ACWR,&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/1-ACWR/Coupled-vs-uncoupled.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;the fundamental idea is the same: we should avoid large increases in workload, especially in athletes with relatively low chronic training (think returning to play from injury or pre-season camps in collegiate sports). And really, that’s the crux of it all: avoid extremely large changes in training load because you will either overfatigue or underprepare your athlete and increase their risk of injury while decreasing their preparedness. And instead of just focusing on ACWR, we need to consider absolute and relative changes in workload in conjunction with measures of the athletes’ training tolerance (mood-state questionnaires, HRV, resting heart rate, jump testing, etc.). This holistic approach to athlete monitoring will provide us far more context and actionable data than getting caught up on a single metric (the good ole “forest for the trees” approach).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;calculating-acwr-in-r&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Calculating ACWR in R&lt;/h2&gt;
&lt;p&gt;With the history out of the way, let’s get to the meat and potatoes of what I want to discuss: using R to calculate ACWR.&lt;/p&gt;
&lt;p&gt;If you aren’t familiar with R, you should be. R is a programming language that has been primarily used by statisticians to perform a wide variety of analytical techniques. The power of R comes from its high extensibility via packages–code libraries built to solve a variety of problems. Packages range from data manipulation packages (dplyr, data.table) to plotting (ggplot2, plotly) to dashboard creation (shiny, shinydashboard, flexdashboard) to…well, you get the idea. Basically, if you can dream up an idea, there’s probably an R package for it. And in the off chance it doesn’t exist in R but exists in Python (some of the high-level machine learning stuff), there’s even a package to call Python code in R! Really, R is a jack-of-all-trades, master-of-most language.&lt;/p&gt;
&lt;p&gt;This means problems that are extremely difficult to solve in Excel can often be conquered through loading a package and calling a single-line function in R. As an example, below is the array formula required to calculate a coupled chronic EWMA in Excel. You &lt;em&gt;might&lt;/em&gt; need a magnifying glass.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/1-ACWR/Excel-array-formula.png&#34; /&gt; See &lt;a href=&#34;https://progressiveathleticperformance.com/free-downloads/&#34; target=&#34;_blank&#34;&gt;Adam Sullivan’s site&lt;/a&gt; for the spreadsheet I pulled this formula from.&lt;/p&gt;
&lt;p&gt;Contrast that monster with what you would call in R:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;library(TTR)
EMA(training_load, n = 1, ratio = 2/(1+28))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;What I did in the above code block is call the &lt;code&gt;TTR&lt;/code&gt; package (a package built for financial analyses) and then call the exponential moving average function (EMA). &lt;code&gt;EMA&lt;/code&gt; requires three pieces of information: the data we’re applying the function to, the size of the window to apply the decay ratio to, and the decay ratio. These correspond to column “E”, the formula in column “G”, and cell R9 in Adam’s spreadsheet I linked above.&lt;/p&gt;
&lt;p&gt;Granted, things get a bit more complicated when dealing with multiple athletes, but I think you’ll agree with me that the R code is still substantially easier to follow than the Excel formula. In this next example, I’m using the package &lt;code&gt;data.table&lt;/code&gt; in addition to the &lt;code&gt;TTR&lt;/code&gt; and &lt;code&gt;zoo&lt;/code&gt; packages to calculate both a traditional ACWR (via simple moving averages) and an exponentially-weighted ACWR. Check back soon because I’ll have a video up that discusses the ins and outs of how to use &lt;code&gt;data.table&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;the-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The Data&lt;/h3&gt;
&lt;p&gt;First, the &lt;a href=&#34;/post/1-ACWR/tl-data.csv&#34;&gt;data&lt;/a&gt;:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;season&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;training.date&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;athlete&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;tl&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Rhiannon Garcia&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;632&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Shajee’a al-Amiri&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1035&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Brittany Valdez&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;948&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1264&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Kayla Mix&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1242&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Mariana Lewis&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;948&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Nicole Tipton&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;948&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Marshelle Edwards&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;948&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Cinoi Slovonsky&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1095&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-20&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Mariana Lewis&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1112&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-09-r-acwr-intro_files/figure-html/unnamed-chunk-1-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;more-than-one-way-to-skin-a-cat&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;More Than One Way to Skin a Cat&lt;/h2&gt;
&lt;p&gt;My data are stored in a data frame called tl.data. These are real values, but I’ve changed the names and dates to anonymize things. Anyway, the data frame has four columns: season, training.date, athlete, and tl. We aren’t concerned with the season column today, but will revisit it once we dive down the rabbit hole of subsetting data. For now, let’s start by calculating a 7:28 ACWR the “traditional” way–that is, coupled simple moving averages. Unfortunately, &lt;code&gt;TTR::SMA&lt;/code&gt; doesn’t implement the “partial” argument, so we have to turn to &lt;code&gt;zoo::rollapplyr&lt;/code&gt; instead. With &lt;code&gt;SMA&lt;/code&gt;, you have to wait for both rolling windows to accumulate before an ACWR is calculated:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;season&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;training.date&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;athlete&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;tl&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;acute&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;chronic&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;SMA.ACWR&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1264&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-20&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;740&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1002&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;528&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-23&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;720&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-24&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-25&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;696&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;707.1429&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-26&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;480&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;595.1429&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-27&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;489.4286&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-28&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1330&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;536.2857&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;NA&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;With &lt;code&gt;rollapplyr&lt;/code&gt;, on the other hand, the function will average the available data until it reaches the specified window size:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;season&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;training.date&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;athlete&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;tl&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;acute&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;chronic&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;SMA.ACWR&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-19&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1264&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1264.0000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1264.0000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-20&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;740&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1002.0000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1002.0000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-21&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1002&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1002.0000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1002.0000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-22&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;528&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;883.5000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;883.5000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-23&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;720&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;850.8000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;850.8000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-24&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;709.0000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;709.0000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-25&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;696&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;707.1429&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;707.1429&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-26&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;480&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;595.1429&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;678.7500&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8768219&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-27&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;489.4286&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;603.3333&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8112076&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Fall 2017&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;2017-08-28&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;Urja Chaudhry&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1330&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;536.2857&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;676.0000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7933221&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now, if you want to wait for the windows to accumulate before returning an ACWR value, disregard what I just said about &lt;code&gt;rollapplyr&lt;/code&gt; and use &lt;code&gt;SMA&lt;/code&gt; instead. I’m honestly not sure what the “appropriate” method is in this case, but seeing as how &lt;code&gt;SMA&lt;/code&gt; would spend ~ 1/3 of the season accumulating before returning an ACWR (college sports, man), I prefer &lt;code&gt;rollapplyr&lt;/code&gt; in this case. This does leave us with the question of how to account for the athletes’ training states coming into the season, but I’ll leave that for another post.&lt;/p&gt;
&lt;p&gt;Anyway, here’s how I calculated the ACWR values above with &lt;code&gt;rollapplyr&lt;/code&gt;. You’ll notice I’m able to apply these functions to each individual athlete thanks to the &lt;code&gt;data.table&lt;/code&gt; package. I’ll have a video on how that works soon.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2018-06-12 edit:&lt;/strong&gt; I realized I left out a very important piece of information! If you’re looking to copy these functions in the provided dataset or your own data, you’ll need to enable data.table’s functionality on the data prior to using the functions below. That’s accomplished by calling:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tl.data &amp;lt;- data.table(tl.data)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sorry for any confusion!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Packages needed
library(data.table)
library(ggplot2)
library(zoo)

#Calculate each variable
tl.data[, sma.acute := rollapplyr(tl, 7, mean, partial = TRUE), by = .(athlete)]
tl.data[, sma.chronic := rollapplyr(tl, 28, mean, partial = TRUE), by = .(athlete)]
tl.data[, sma.ACWR := sma.acute/sma.chronic]

#Plot the data
ggplot(tl.data, aes(x = training.date)) + geom_col(aes(y = tl)) + 
  geom_line(aes(y = sma.ACWR * 1000)) + 
  scale_y_continuous(sec.axis = sec_axis(~./1000, name = &amp;#39;SMA ACWR&amp;#39;)) + 
  theme_bw() + facet_wrap(~athlete) + 
  labs(title = &amp;#39;TL with SMA ACWR&amp;#39;, x = &amp;#39;Training Date&amp;#39;, y = &amp;#39;TL&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-09-r-acwr-intro_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Unfortunately, calling &lt;code&gt;rollapplyr&lt;/code&gt; is a bit of a handful compared to &lt;code&gt;SMA&lt;/code&gt;, but whatever. As you can see, we now have individual ACWRs using the “traditional” calculation method. How about using exponentially-weighted moving averages? Thankfully, this is a lot easier since we can use &lt;code&gt;EMA&lt;/code&gt;:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Packages needed
library(data.table)
library(ggplot2)
library(TTR)

#Calculate each variable
tl.data[, ema.acute := EMA(tl, n = 1, ratio = 2/(1+7)), by = .(athlete)]
tl.data[, ema.chronic := EMA(tl, n = 1, ratio = 2/(1+28)), by = .(athlete)]
tl.data[, ema.ACWR := ema.acute/ema.chronic]

#Plot the data
ggplot(tl.data, aes(x = training.date)) + geom_col(aes(y = tl)) + 
  geom_line(aes(y = ema.ACWR * 1000)) + 
  scale_y_continuous(sec.axis = sec_axis(~./1000, name = &amp;#39;EMA ACWR&amp;#39;)) + 
  theme_bw() + facet_wrap(~athlete) + 
  labs(title = &amp;#39;TL with EMA ACWR&amp;#39;, x = &amp;#39;Training Date&amp;#39;, y = &amp;#39;TL&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-09-r-acwr-intro_files/figure-html/unnamed-chunk-6-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Alternatively, if you want the EMA to accumulate before returning values, you would call:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;tl.data[, ema.acute := EMA(tl, n = 7, ratio = 2/(1+7)), by = .(athlete)]
tl.data[, ema.chronic := EMA(tl, n = 28, ratio = 2/(1+28)), by = .(athlete)]
tl.data[, ema.ACWR := ema.acute/ema.chronic]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I should point out these two methods &lt;strong&gt;&lt;em&gt;return different values&lt;/em&gt;&lt;/strong&gt;, unlike &lt;code&gt;SMA&lt;/code&gt; and &lt;code&gt;rollapplyr&lt;/code&gt;. This is because of the decay ratio in &lt;code&gt;EMA&lt;/code&gt;. So don’t use different window sizes (n = 1 vs. n = 7 or n = 28) interchangably. And be sure to report how you’re calculating your windows!&lt;/p&gt;
&lt;p&gt;Let’s compare our ACWR values for a single athlete. I’ve included ACWRs for the traditional method and both methods of EMA discussed above:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Alternate EMA calculation
tl.data[, ema.acute.alt := EMA(tl, n = 7, ratio = 2/(1+7)), by = .(athlete)]
tl.data[, ema.chronic.alt := EMA(tl, n = 28, ratio = 2/(1+28)), by = .(athlete)]
tl.data[, ema.ACWR.alt := ema.acute.alt/ema.chronic.alt]

#Shift the ACWR values down one day to accurately reflect the effect of the previous day&amp;#39;s training
tl.data[, c(&amp;#39;sma.lagged&amp;#39;,&amp;#39;ema.lagged&amp;#39;, &amp;#39;ema.alt.lagged&amp;#39;) := 
          shift(.SD, n = 1, type = &amp;#39;lag&amp;#39;, fill = NA), 
        .SDcols = c(&amp;#39;sma.ACWR&amp;#39;,&amp;#39;ema.ACWR&amp;#39;, &amp;#39;ema.ACWR.alt&amp;#39;), by = .(athlete)]

#Plot the results
ggplot(tl.data[athlete == &amp;#39;Urja Chaudhry&amp;#39;], aes(x = as.Date(training.date), group = 1)) + 
  geom_col(aes(y = tl)) + geom_line(aes(y = sma.lagged * 1000, colour = &amp;#39;SMA&amp;#39;)) + 
  geom_line(aes(y = ema.lagged * 1000, colour = &amp;#39;EMA&amp;#39;)) + 
  geom_line(aes(y = ema.alt.lagged * 1000, colour = &amp;#39;EMA alt&amp;#39;)) +
  scale_y_continuous(sec.axis = sec_axis(~./1000, name = &amp;#39;ACWR&amp;#39;)) + 
  labs(title = &amp;#39;ACWR Comparison&amp;#39;, x = &amp;#39;Training Date&amp;#39;, y = &amp;#39;TL&amp;#39;, colour = &amp;#39;Method&amp;#39;) + 
  theme_bw() + theme(legend.position = &amp;#39;bottom&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-09-r-acwr-intro_files/figure-html/unnamed-chunk-7-1.png&#34; width=&#34;2100&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Hopefully you notice there are some pretty stark diffferences between the SMA and EMA methods, with the differences in the two EMA approaches mostly disappearing by day 45. This echoes what Windt and Gabbett &lt;span class=&#34;citation&#34;&gt;(&lt;a href=&#34;#ref-Windt_2018&#34;&gt;2018&lt;/a&gt;)&lt;/span&gt; say at the end of their editorial: explicity detail how you’re calculating your ACWRs!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;coupled-vs.uncoupled&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Coupled vs. Uncoupled&lt;/h2&gt;
&lt;p&gt;If you’ve read Windt and Gabbett’s editorial &lt;span class=&#34;citation&#34;&gt;(&lt;a href=&#34;#ref-Windt_2018&#34;&gt;2018&lt;/a&gt;)&lt;/span&gt;, they provide an equation to convert coupled ACWRs to uncoupled ACWRs:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(Uncoupled ACWR = \frac{3 * Coupled ACWR}{4 - Coupled ACWR}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This post is pretty long in the tooth at this point, so I’m only going to apply this function to my original EMA calculation (n = 1). The same functions will apply for the other ACWR methods.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#Uncoupled EMA ACWR calculation
tl.data[, uncoupled.ema := (3 * ema.lagged)/(4 - ema.lagged)]

#Plot the results
ggplot(tl.data[athlete == &amp;#39;Urja Chaudhry&amp;#39;], aes(x = as.Date(training.date), group = 1)) +
  geom_col(aes(y = tl)) + geom_line(aes(y = ema.lagged * 1000, colour = &amp;#39;Coupled&amp;#39;)) +
  geom_line(aes(y = uncoupled.ema * 1000, colour = &amp;#39;Uncoupled&amp;#39;)) +
  scale_y_continuous(sec.axis = sec_axis(~./1000, name = &amp;#39;ACWR&amp;#39;)) +
  labs(title = &amp;#39;Coupled vs. Uncoupled&amp;#39;, x = &amp;#39;Training Date&amp;#39;, y = &amp;#39;TL&amp;#39;, colour = &amp;#39;Method&amp;#39;) +
  theme_bw() + theme(legend.position = &amp;#39;bottom&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2018-06-09-r-acwr-intro_files/figure-html/unnamed-chunk-8-1.png&#34; width=&#34;2100&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And that’s it. There are some definite differences in the two methods, so again, be consistent in how you choose to perform your analysis.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;wrapping-up&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;ggplot code notwithstanding (that stuff gets to be a mess after a while), hopefully this post highlighted the fact that a few lines of R code can accomplish the same thing as lines and lines of Excel array formulas. The syntax might look a little scary at first, but once you get the hang of it, you can pound out extremely complex analysis code in a few minutes. From there, you can create a report or a dashboard that will allow you to drill down into your data.&lt;/p&gt;
&lt;p&gt;Something also worth mentioning is the time required to update an Excel spreadsheet vs. using a script in R. Excel does not play nice with large data sets that contain multiple sets of array formulas. As you add more data and the files get larger, they take longer to open, adding new training data causes the workbook to hang, and you’re &lt;em&gt;never quite sure&lt;/em&gt; if saving the workbook is going to save your additions or cause Excel to crash. Contrast that with R: I have eight years of men’s soccer RPE data. There are ~ 35,000 records, 89 athletes, and 16 seasons (fall/spring). Running the above EMA calculations (with n = 1) on the data took ~ 0.2 seconds. I’m pretty sure Excel would literally cause my computer to catch on fire if I tried that in a workbook. So while there’s some learning required on the front end, the benefits far outweigh the costs.&lt;/p&gt;
&lt;p&gt;If you do want to stay in the Microsoft ecosystem, though, you can have your cake and eat it too if you use Power BI, Microsoft’s business insights software. Think of it as a suped up version of Excel that can actually handle large amounts of data without exploding. Better yet, it has R code support, so you can actually import your data through Power BI and execute code that returns your data with all the necessary calculations. I’ve successfully used that approach to create dashboards for a few coaches over the last few years. I’ll (eventually) have a video up walking you through that process.&lt;/p&gt;
&lt;div class=&#34;figure&#34;&gt;
&lt;img src=&#34;/post/1-ACWR/bi-example.png&#34; /&gt;

&lt;/div&gt;
&lt;p&gt;As for which ACWR method is “correct,” ¯\_(ツ)_/¯. I tend to agree with Windt and Gabbett &lt;span class=&#34;citation&#34;&gt;(&lt;a href=&#34;#ref-Windt_2018&#34;&gt;2018&lt;/a&gt;)&lt;/span&gt; that we shouldn’t get lost in the minutiae of simple vs. exponential vs. coupled vs. uncoupled vs. whatever else this field comes up with. At the end of the day, we need to prescribe training loads in a logical fashion so we don’t completely break our athletes: High chronic workloads need to be built slowly over time to prepare our athletes for the worst-case scenario (for us a few years ago, that was three double overtime games in 12 days against teams who all finished in the top 15), and we need to monitor how our athletes are tolerating training through a combination of physical and psychological assessments. Let’s worry about the small problems once we get the basics down, yeah?&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;code-recap&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Code Recap&lt;/h2&gt;
&lt;p&gt;To recap the code I used in this post:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Required packages
library(data.table)
library(ggplot2)
library(TTR)
library(zoo)

# Enabling data.table functionality
tl.data &amp;lt;- data.table(tl.data)

# Coupled ACWR via simple moving averages
tl.data[, sma.acute := rollapplyr(tl, 7, mean, partial = TRUE), by = .(athlete)]
tl.data[, sma.chronic := rollapplyr(tl, 28, mean, partial = TRUE), by = .(athlete)]
tl.data[, sma.ACWR := sma.acute/sma.chronic]

# Alternatively
tl.data[, sma.acute := SMA(tl, 7), by = .(athlete)]
tl.data[, sma.chronic := SMA(tl, 28), by = .(athlete)]
tl.data[, sma.ACWR := sma.acute/sma.chronic]

# Coupled ACWR via exponentially-weighted moving averages
tl.data[, ema.acute := EMA(tl, n = 1, ratio = 2/(1+7)), by = .(athlete)]
tl.data[, ema.chronic := EMA(tl, n = 1, ratio = 2/(1+28)), by = .(athlete)]
tl.data[, ema.ACWR := ema.acute/ema.chronic]

# Alternatively,
tl.data[, ema.acute := EMA(tl, n = 7, ratio = 2/(1+7)), by = .(athlete)]
tl.data[, ema.chronic := EMA(tl, n = 28, ratio = 2/(1+28)), by = .(athlete)]
tl.data[, ema.ACWR := ema.acute/ema.chronic]

# Uncoupling the ACWR
tl.data[, uncoupled.ema := (3 * ema.lagged)/(4 - ema.lagged)]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Let me know if you have any questions! Shoot me an email: &lt;a href=&#34;mailto:samsperformancetraining@gmail.com&#34;&gt;samsperformancetraining@gmail.com&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level2 unnumbered&#34;&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;div id=&#34;refs&#34; class=&#34;references&#34;&gt;
&lt;div id=&#34;ref-DeWeese_2015&#34;&gt;
&lt;p&gt;DeWeese, Brad H., Guy Hornsby, Meg Stone, and Michael H. Stone. 2015. “The Training Process: Planning for Strengthpower Training in Track and Field. Part 1: Theoretical Aspects.” &lt;em&gt;Journal of Sport and Health Science&lt;/em&gt; 4 (4). Elsevier BV: 308–17. doi:&lt;a href=&#34;https://doi.org/10.1016/j.jshs.2015.07.003&#34;&gt;10.1016/j.jshs.2015.07.003&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Ehrmann_2016&#34;&gt;
&lt;p&gt;Ehrmann, Fabian E., Craig S. Duncan, Doungkamol Sindhusake, William N. Franzsen, and David A. Greene. 2016. “GPS and Injury Prevention in Professional Soccer.” &lt;em&gt;Journal of Strength and Conditioning Research&lt;/em&gt; 30 (2). Ovid Technologies (Wolters Kluwer Health): 360–67. doi:&lt;a href=&#34;https://doi.org/10.1519/jsc.0000000000001093&#34;&gt;10.1519/jsc.0000000000001093&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Gabbett_2016&#34;&gt;
&lt;p&gt;Gabbett, Tim J. 2016. “The Traininginjury Prevention Paradox: Should Athletes Be Training Smarterandharder?” &lt;em&gt;British Journal of Sports Medicine&lt;/em&gt; 50 (5). BMJ: 273–80. doi:&lt;a href=&#34;https://doi.org/10.1136/bjsports-2015-095788&#34;&gt;10.1136/bjsports-2015-095788&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Hulin_2013&#34;&gt;
&lt;p&gt;Hulin, Billy T, Tim J Gabbett, Peter Blanch, Paul Chapman, David Bailey, and John W Orchard. 2013. “Spikes in Acute Workload Are Associated with Increased Injury Risk in Elite Cricket Fast Bowlers.” &lt;em&gt;British Journal of Sports Medicine&lt;/em&gt; 48 (8). BMJ: 708–12. doi:&lt;a href=&#34;https://doi.org/10.1136/bjsports-2013-092524&#34;&gt;10.1136/bjsports-2013-092524&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Hulin_2015&#34;&gt;
&lt;p&gt;Hulin, Billy T, Tim J Gabbett, Daniel W Lawson, Peter Caputi, and John A Sampson. 2015. “The Acute:chronic Workload Ratio Predicts Injury: High Chronic Workload May Decrease Injury Risk in Elite Rugby League Players.” &lt;em&gt;British Journal of Sports Medicine&lt;/em&gt; 50 (4). BMJ: 231–36. doi:&lt;a href=&#34;https://doi.org/10.1136/bjsports-2015-094817&#34;&gt;10.1136/bjsports-2015-094817&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Lolli_2017&#34;&gt;
&lt;p&gt;Lolli, Lorenzo, Alan M Batterham, Richard Hawkins, David M Kelly, Anthony J Strudwick, Robin Thorpe, Warren Gregson, and Greg Atkinson. 2017. “Mathematical Coupling Causes Spurious Correlation Within the Conventional Acute-to-Chronic Workload Ratio Calculations.” &lt;em&gt;British Journal of Sports Medicine&lt;/em&gt;, November. BMJ, bjsports–2017–098110. doi:&lt;a href=&#34;https://doi.org/10.1136/bjsports-2017-098110&#34;&gt;10.1136/bjsports-2017-098110&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Malone_2018&#34;&gt;
&lt;p&gt;Malone, Shane, Brian Hughes, Dominic A. Doran, Kieran Collins, and Tim J. Gabbett. 2018. “Can the Workloadinjury Relationship Be Moderated by Improved Strength, Speed and Repeated-Sprint Qualities?” &lt;em&gt;Journal of Science and Medicine in Sport&lt;/em&gt;, February. Elsevier BV. doi:&lt;a href=&#34;https://doi.org/10.1016/j.jsams.2018.01.010&#34;&gt;10.1016/j.jsams.2018.01.010&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Murray_2016&#34;&gt;
&lt;p&gt;Murray, Nicholas B, Tim J Gabbett, Andrew D Townshend, and Peter Blanch. 2016. “Calculating Acute:chronic Workload Ratios Using Exponentially Weighted Moving Averages Provides a More Sensitive Indicator of Injury Likelihood Than Rolling Averages.” &lt;em&gt;British Journal of Sports Medicine&lt;/em&gt; 51 (9). BMJ: 749–54. doi:&lt;a href=&#34;https://doi.org/10.1136/bjsports-2016-097152&#34;&gt;10.1136/bjsports-2016-097152&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Windt_2018&#34;&gt;
&lt;p&gt;Windt, Johann, and Tim J Gabbett. 2018. “Is It All for Naught? What Does Mathematical Coupling Mean for Acute:chronic Workload Ratios?” &lt;em&gt;British Journal of Sports Medicine&lt;/em&gt;, May. BMJ, bjsports–2017–098925. doi:&lt;a href=&#34;https://doi.org/10.1136/bjsports-2017-098925&#34;&gt;10.1136/bjsports-2017-098925&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
